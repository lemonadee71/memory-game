{"version":3,"sources":["App.module.css","components/Card.js","App.js","index.js","components/Card.module.css"],"names":["module","exports","Card","data","selectCard","difficulty","motion","div","whileHover","scale","className","style","card","onClick","hex","image","backgroundColor","text","name","rgb","join","storage","window","localStorage","App","useState","currentScore","setCurrentScore","bestScore","setBestScore","setDifficulty","shuffledArray","setShuffledArray","selectedColors","setSelectedColors","shuffleItems","tempArray","index","Math","floor","random","colors","length","item","find","color","push","chooseCard","reset","max","useEffect","JSON","parse","getItem","setItem","stringify","htmlFor","value","onChange","e","target","container","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,UAAY,yB,0HC4BfC,EAzBF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAKhC,OACE,eAACC,EAAA,EAAOC,IAAR,CACEC,WAAY,CAAEC,MAAO,MACrBC,UAAWC,IAAMC,KACjBC,QARiB,WACnBT,EAAWD,EAAKW,MAIhB,UAKE,qBAAKJ,UAAWC,IAAMI,MAAOJ,MAAO,CAAEK,gBAAiBb,EAAKW,OAC5C,IAAfT,EACC,mBAAGK,UAAWC,IAAMM,KAApB,SACE,iCAASd,EAAKe,SAEd,KACHb,EAAa,EAAI,mBAAGK,UAAWC,IAAMM,KAApB,SAA2Bd,EAAKW,MAAW,KAC5DT,EAAa,EACZ,mBAAGK,UAAWC,IAAMM,KAApB,yBAAoCd,EAAKgB,IAAIC,KAAK,MAAlD,OACE,S,wBCnBJC,EAAUC,OAAOC,aAwFRC,EAtFH,WACV,IADgB,EAEwBC,mBAAS,GAFjC,mBAETC,EAFS,KAEKC,EAFL,OAGkBF,mBAAS,GAH3B,mBAGTG,EAHS,KAGEC,EAHF,OAIoBJ,mBAAS,GAJ7B,mBAITpB,EAJS,KAIGyB,EAJH,OAK0BL,mBAAS,IALnC,mBAKTM,EALS,KAKMC,EALN,OAM4BP,mBAAS,IANrC,mBAMTQ,EANS,KAMOC,EANP,KAQVC,EAAe,WAGnB,IAFA,IAAMC,EAAY,GADO,aAIvB,IAAMC,EAAQC,KAAKC,MAAMD,KAAKE,SAAWrC,EAAKsC,OAAOC,QAC/CC,EAAOxC,EAAKsC,OAAOJ,GAEpBD,EAAUQ,MAAK,SAACC,GAAD,OAAWA,EAAM/B,MAAQ6B,EAAK7B,QAChDsB,EAAUU,KAAKH,IAfF,KAUVP,EAAUM,QAAwB,IASzC,OAAON,GAGHW,EAAa,SAACjC,GACMmB,EAAeW,MAAK,SAACC,GAAD,OAAWA,IAAU/B,KAG/DkC,KAEArB,EAAgBD,EAAe,GAC/BQ,EAAkB,GAAD,mBAAKD,GAAL,CAAqBnB,KACtCkB,EAAiBG,OASfa,EAAQ,WACZd,EAAkB,IAClBL,EAAaS,KAAKW,IAAIvB,EAAcE,IACpCD,EAAgB,GAChBK,EAAiBG,MAYnB,OATAe,qBAAU,WACRlB,EAAiBG,KACjBN,EAAasB,KAAKC,MAAM/B,EAAQgC,QAAQ,iBACvC,IAEHH,qBAAU,WACR7B,EAAQiC,QAAQ,YAAaH,KAAKI,UAAU3B,MAC3C,CAACA,IAGF,gCACE,gCACE,gDAAmBF,KACnB,gDAAmBE,KACnB,uBAAO4B,QAAQ,aAAf,0BACA,yBACEtC,KAAK,aACLuC,MAAOpD,EACPqD,SA9BiB,SAACC,GACxB7B,GAAe6B,EAAEC,OAAOH,OACxBT,KAyBI,UAKE,wBAAQS,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,oBACA,wBAAQA,MAAM,IAAd,wBAGJ,qBAAK/C,UAAWC,IAAMkD,UAAtB,SACG9B,EAAc+B,KAAI,SAACjB,GAAD,OACjB,cAAC,EAAD,CAEExC,WAAYA,EACZF,KAAM0C,EACNzC,WAAY2C,GAHPF,EAAM/B,cC9EvBiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BnE,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,KAAO,qB","file":"static/js/main.70bcb9c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import React from 'react';\nimport { motion } from 'framer-motion';\nimport style from './Card.module.css';\n\nconst Card = ({ data, selectCard, difficulty }) => {\n  const clickHandler = () => {\n    selectCard(data.hex);\n  };\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.05 }}\n      className={style.card}\n      onClick={clickHandler}\n    >\n      <div className={style.image} style={{ backgroundColor: data.hex }}></div>\n      {difficulty === 0 ? (\n        <p className={style.text}>\n          <strong>{data.name}</strong>\n        </p>\n      ) : null}\n      {difficulty < 2 ? <p className={style.text}>{data.hex}</p> : null}\n      {difficulty < 2 ? (\n        <p className={style.text}>{`rgb: (${data.rgb.join(', ')})`}</p>\n      ) : null}\n    </motion.div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport Card from './components/Card';\nimport style from './App.module.css';\nimport data from './data.json';\n\nconst storage = window.localStorage;\n\nconst App = () => {\n  const CARD_LIMIT = 12;\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [difficulty, setDifficulty] = useState(0);\n  const [shuffledArray, setShuffledArray] = useState([]);\n  const [selectedColors, setSelectedColors] = useState([]);\n\n  const shuffleItems = () => {\n    const tempArray = [];\n\n    while (tempArray.length !== CARD_LIMIT) {\n      const index = Math.floor(Math.random() * data.colors.length);\n      const item = data.colors[index];\n\n      if (!tempArray.find((color) => color.hex === item.hex)) {\n        tempArray.push(item);\n      }\n    }\n\n    return tempArray;\n  };\n\n  const chooseCard = (hex) => {\n    const isAlreadyPicked = selectedColors.find((color) => color === hex);\n\n    if (isAlreadyPicked) {\n      reset();\n    } else {\n      setCurrentScore(currentScore + 1);\n      setSelectedColors([...selectedColors, hex]);\n      setShuffledArray(shuffleItems());\n    }\n  };\n\n  const chooseDifficulty = (e) => {\n    setDifficulty(+e.target.value);\n    reset();\n  };\n\n  const reset = () => {\n    setSelectedColors([]);\n    setBestScore(Math.max(currentScore, bestScore));\n    setCurrentScore(0);\n    setShuffledArray(shuffleItems());\n  };\n\n  useEffect(() => {\n    setShuffledArray(shuffleItems());\n    setBestScore(JSON.parse(storage.getItem('highscore')));\n  }, []);\n\n  useEffect(() => {\n    storage.setItem('highscore', JSON.stringify(bestScore));\n  }, [bestScore]);\n\n  return (\n    <div>\n      <div>\n        <p>Current score: {currentScore}</p>\n        <p>Highest score: {bestScore}</p>\n        <label htmlFor=\"difficulty\">Difficulty: </label>\n        <select\n          name=\"difficulty\"\n          value={difficulty}\n          onChange={chooseDifficulty}\n        >\n          <option value=\"0\">Easy</option>\n          <option value=\"1\">Medium</option>\n          <option value=\"2\">Hard</option>\n        </select>\n      </div>\n      <div className={style.container}>\n        {shuffledArray.map((color) => (\n          <Card\n            key={color.hex}\n            difficulty={difficulty}\n            data={color}\n            selectCard={chooseCard}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"image\":\"Card_image__mj-K7\",\"text\":\"Card_text__C6TIO\"};"],"sourceRoot":""}